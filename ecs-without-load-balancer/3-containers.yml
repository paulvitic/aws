AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  StackRootName:
    Type: String
  ImageRepositoryName:
    Type: String

Resources:
  ContainerRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ImageRepositoryName
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Only keep 5 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 5
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - Fn::ImportValue: !Sub ${StackRootName}-EnvironmentAdminUserArn
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
Outputs:
  ContainerRepoArn:
    Value: !GetAtt ContainerRepo.Arn
    Export:
      Name: !Sub '${StackRootName}-ContainerRepoArn'
  ContainerRepoURI:
    Value: !Join ['', [!Ref 'AWS::AccountId', '.dkr.ecr.', !Ref 'AWS::Region', '.', !Ref 'AWS::URLSuffix', '/', !Ref 'ImageRepositoryName']]
    Export:
      Name: !Sub '${StackRootName}-ContainerRepoURI'
  ContainerRepoConsoleURL:
    Value: !Join ['', ['https://', !Ref 'AWS::Region', '.console.', !Ref 'AWS::URLSuffix', '/ecr/repositories/', !Ref 'ImageRepositoryName', '/?']]