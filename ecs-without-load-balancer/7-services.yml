AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MongoDbTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn: EcsInstanceAutoScalingGroup
    Properties:
      Family: mongodb-task
      TaskRoleArn: !GetAtt 'EcsTaskExecutionRole.Arn'
      ExecutionRoleArn: !GetAtt 'EcsTaskExecutionRole.Arn'
      Cpu: 256
      Memory: 512
      # requires NetworkConfiguration in service description
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: mongo
          Cpu: 128
          Memory: 256
          Image: 332197038802.dkr.ecr.eu-central-1.amazonaws.com/peof-mongodb-dev:latest
          PortMappings:
            - ContainerPort: 27017
          Environment:
            - Name: MONGO_INITDB_ROOT_USERNAME
              Value: root
            - Name: MONGO_INITDB_ROOT_PASSWORD
              Value: password
            - Name: MONGO_INITDB_DATABASE
              Value: admin
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'mongodb'
        - Name: mongo-express
          Cpu: 128
          Memory: 256
          Image: mongo-express:latest
          PortMappings:
            - ContainerPort: 8081
          Environment:
            - Name: ME_CONFIG_MONGODB_ADMINUSERNAME
              Value: root
            - Name: ME_CONFIG_MONGODB_ADMINPASSWORD
              Value: password
            - Name: ME_CONFIG_MONGODB_SERVER
              Value: localhost
            - Name: MONGO_URI
              Value: mongodb://localhost:27017/
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'mongo-express'
  MongoDbService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: mongodb
      Cluster: !Ref 'EcsCluster'
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: 1
      TaskDefinition: !Ref 'MongoDbTaskDefinition'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: 'ENABLED'
          Subnets:
            - !Ref PubSubnet
          SecurityGroups: [!Ref 'EcsHostSecurityGroup']

  RabbitMqTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn: EcsInstanceAutoScalingGroup
    Properties:
      Family: rabbitmq-task
      TaskRoleArn: !GetAtt 'EcsTaskExecutionRole.Arn'
      ExecutionRoleArn: !GetAtt 'EcsTaskExecutionRole.Arn'
      Cpu: 256
      Memory: 512
      # requires NetworkConfiguration in service description
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: rabbitmq
          Cpu: 128
          Memory: 256
          Image: rabbitmq:3-management
          PortMappings:
            - ContainerPort: 15672
            - ContainerPort: 5672
          Environment:
            - Name: RABBITMQ_DEFAULT_USER
              Value: guest
            - Name: RABBITMQ_DEFAULT_PASS
              Value: guest
            - Name: RABBITMQ_DEFAULT_VHOST
              Value: /
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'rabbitmq'
  RabbitMqService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: rabbitmq
      Cluster: !Ref 'EcsCluster'
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: 1
      TaskDefinition: !Ref 'RabbitMqTaskDefinition'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: 'ENABLED'
          Subnets:
            - !Ref PubSubnet
          SecurityGroups: [!Ref 'EcsHostSecurityGroup']